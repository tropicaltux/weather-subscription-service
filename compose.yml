services: 
  api-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wss-api-server
    ports:
      - "3000:3000"
    environment:
      - APP_ENV=${APP_ENV:-production}
      - PORT=3000
      - ALLOW_ORIGIN=${ALLOW_ORIGIN:-http://localhost:8080} # Default host allowed to access the API documentation via Swagger UI
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-weather_subscription}
      - DB_SSL_MODE=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    
  postgres:
    image: postgres:17-alpine
    container_name: wss-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-weather_subscription}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - wss-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.21.0
    container_name: wss-api-swagger-ui
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/api/openapi.yaml
    volumes:
      - ./api/openapi.yaml:/api/openapi.yaml
    restart: unless-stopped

volumes:
  wss-postgres-data: